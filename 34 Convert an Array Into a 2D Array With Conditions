class Solution {
public:
    vector<vector<int>> findMatrix(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> ans;
        unordered_map<int, int> mp;
        for(int i=0;i<n;i++){
            mp[nums[i]]++;
        }
        int maxi=INT_MIN;
        for(auto it:mp){
            if(it.second>maxi){
                maxi=it.second;
            }
        }
        
        
        while(maxi--){
            vector<int> vt;
            for(auto it:mp){
                int n=it.second;
                if(n){
                    vt.push_back(it.first);
                    mp[it.first]--;
                    
                }
                
            }
            ans.push_back(vt);
        }
    return ans;
    }
};
_________________________________________________________________________________________________________________________________________________________________

class Solution {
public:
    vector<vector<int>> findMatrix(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> ans;
        unordered_map<int, int> mp;
        for(int i=0;i<n;i++){
            mp[nums[i]]++;
        }
        
        while(!mp.empty()){
            vector<int> temp;
            for(auto it = mp.begin(); it != mp.end(); ){
                temp.push_back(it->first);
                it->second--;
                if(it->second == 0){
                    it = mp.erase(it);
                } else {
                    ++it;
                }
            }
            ans.push_back(temp);
        }
        
        
    return ans;
    }
};
